from lxml.html import clean
from typing import Any

_logger: Any
tags_to_kill: Any
tags_to_remove: Any
allowed_tags: Any
safe_attrs: Any

class _Cleaner(clean.Cleaner):
    _style_re: Any
    _style_whitelist: Any
    strip_classes: bool
    sanitize_style: bool
    def __call__(self, doc) -> None: ...
    def tag_quote(self, el): ...
    def strip_class(self, el) -> None: ...
    def parse_style(self, el) -> None: ...

def html_sanitize(src, silent: bool = ..., sanitize_tags: bool = ..., sanitize_attributes: bool = ..., sanitize_style: bool = ..., sanitize_form: bool = ..., strip_style: bool = ..., strip_classes: bool = ...): ...

URL_REGEX: str
TEXT_URL_REGEX: str
HTML_TAG_URL_REGEX: Any

def validate_url(url): ...
def is_html_empty(html_content): ...
def html_keep_url(text): ...
def html2plaintext(html, body_id: Any | None = ..., encoding: str = ...): ...
def plaintext2html(text, container_tag: bool = ...): ...
def append_content_to_html(html, content, plaintext: bool = ..., preserve: bool = ..., container_tag: bool = ...): ...
def prepend_html_content(html_body, html_content): ...

email_re: Any
single_email_re: Any
mail_header_msgid_re: Any
email_addr_escapes_re: Any

def generate_tracking_message_id(res_id): ...
def email_split_tuples(text): ...
def email_split(text): ...
def email_split_and_format(text): ...
def email_normalize(text): ...
def email_domain_extract(email): ...
def email_domain_normalize(domain): ...
def url_domain_extract(url): ...
def email_escape_char(email_address): ...
def decode_message_header(message, header, separator: str = ...): ...
def formataddr(pair, charset: str = ...): ...
def encapsulate_email(old_email, new_email): ...
